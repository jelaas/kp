#!/usr/bin/env php-cgi
<?php
# Local Variables:
# mode: php
# End:
header('Content-type: text/plain');
header('Cache-Control: no-store, no-cache, must-revalidate, max-age=0');

$root=$_SERVER["KPHOME"];
$KPSECRETS=$_SERVER["KPSECRETS"];
$KPSTASH=$_SERVER["KPSTASH"];

$sesid = $_COOKIE['session'];
if (!filter_var($sesid, FILTER_VALIDATE_REGEXP, array("options"=>array("regexp"=>"/^[a-z0-9]+$/")))) {
  header("HTTP/1.1 403 Forbidden: illegal session cookie: ".$sesid);
  exit(0);
}
if(!file_exists($root."/tmp/KP-".$sesid)) {
  header("HTTP/1.1 403 Forbidden: no session file");
  exit(0);
}
list($name, $nonce) = explode("\n", file_get_contents($root."/tmp/KP-".$sesid));
if (!filter_var($name, FILTER_VALIDATE_REGEXP, array("options"=>array("regexp"=>"/^[a-z0-9]+$/")))) {
  header("HTTP/1.1 403 Forbidden: username syntax");
  exit(0);
}

function kp_log($root, $message) {
  $d = date("Ymd\-G\:i\:s");
  $message = str_replace("\n", " ", $message);
  file_put_contents( $root."/log/kp.log", $d." ".$message."\n", FILE_APPEND);
}

$roles = array();

$dir = $root."/auth";
if($dh = opendir($dir)) {
  while (($file = readdir($dh)) !== false) {
    if($file == ".") continue;
    if($file == "..") continue;
    $fn = $dir."/".$file;
    $users=file_get_contents($fn);
    $u = explode("\n", $users);
    foreach ($u as $key => $user) {
      if($user == $name) {
	array_push($roles, $file);
	break;
      }
    }
  }
  closedir($dh);
}

$a=explode("/", $_SERVER["PATH_INFO"]);
$job=$a[1];
$op=$a[2];
if (!filter_var($job, FILTER_VALIDATE_REGEXP, array("options"=>array("regexp"=>"/^[-_a-zA-Z0-9]+$/")))) {
  header("HTTP/1.1 403 Forbidden: invalid job syntax");
  exit(0);
}
if($op)
  if (!filter_var($op, FILTER_VALIDATE_REGEXP, array("options"=>array("regexp"=>"/^[A-Za-z]+$/")))) {
    header("HTTP/1.1 403 Forbidden: op syntax");
    exit(0);
  }

$jobroles = file_get_contents($root."/exe/".$job."/adminroles");
$permitted=0;
$u = explode("\n", $jobroles);
foreach ($u as $key => $role) {
  if(in_array($role,$roles)) {
    $permitted=1;
    break;
  }
}

if($permitted == 0) {
    header("HTTP/1.1 403 Forbidden: job");
    exit(0);
}

if($op == "list") {
  $dir = $root."/secrets/".$KPSECRETS."/".$job;
  if($dh = opendir($dir)) {
    while (($file = readdir($dh)) !== false) {
      if($file == ".") continue;
      if($file == "..") continue;
      print "$file\n";
    }
    closedir($dh);
  }
  exit(0);
}

if($op == "put") {
  $fname=$a[3];
  if (!filter_var($fname, FILTER_VALIDATE_REGEXP, array("options"=>array("regexp"=>"/^[-._a-zA-Z0-9]+$/")))) {
    header("HTTP/1.1 403 Forbidden: invalid filename syntax");
    exit(0);
  }
  // Create secret dir?
  $dir = $root."/secrets/".$KPSECRETS."/".$job;
  if($dh = opendir($dir)) {
    closedir($dh);
  } else {
    if(mkdir($dir)===FALSE) {
      header("HTTP/1.1 404 $name, failed to create secrets directory for files: $job");
      kp_log($root, "$name, failed to create secrets directory for files: $job");
      exit(0);
    }
  }
  if(move_uploaded_file($_FILES["file"]["tmp_name"], $root."/secrets/".$KPSECRETS."/".$job."/"."$fname") === FALSE) {
    header("HTTP/1.1 404 $name, failed to upload file $fname for job $job");
    kp_log($root, "$name, failed to upload file $fname for job $job");
    exit(0);
  }
  kp_log($root, "user $name uploaded file $fname of size ".$_FILES["file"]["size"]);
  exit(0);
}

if($op == "import") {
  $frole=$a[3];
  if (!filter_var($frole, FILTER_VALIDATE_REGEXP, array("options"=>array("regexp"=>"/^[a-z0-9]+$/")))) {
    header("HTTP/1.1 403 Forbidden: role name syntax");
    exit(0);
  }

  $fname=$a[4];
  if (!filter_var($fname, FILTER_VALIDATE_REGEXP, array("options"=>array("regexp"=>"/^[-._a-zA-Z0-9]+$/")))) {
    header("HTTP/1.1 403 Forbidden: invalid filename syntax");
    exit(0);
  }

  if(!in_array($frole,$roles)) {
    header("HTTP/1.1 403 Forbidden: unauthorized for role ").$frole;
    exit(0);
  }

  // Create secret dir?
  $dir = $root."/secrets/".$KPSECRETS."/".$job;
  if($dh = opendir($dir)) {
    closedir($dh);
  } else {
    if(mkdir($dir)===FALSE) {
      header("HTTP/1.1 404 $name, failed to create secrets directory for files: $job");
      kp_log($root, "$name, failed to create secrets directory for files: $job");
      exit(0);
    }
  }
  if(copy($root."/secrets/".$KPSTASH."/".$frole."/"."$fname", $root."/secrets/".$KPSECRETS."/".$job."/"."$fname") === FALSE) {
    header("HTTP/1.1 404 $name, failed to copy file $fname for job $job");
    kp_log($root, "$name, failed to copy file $fname from stash $frole to job $job");
    exit(0);
  }
  kp_log($root, "user $name uploaded file $fname of size ".$_FILES["file"]["size"]);
  exit(0);
}

if($op == "del") {
  $fname=$a[3];
  if (!filter_var($fname, FILTER_VALIDATE_REGEXP, array("options"=>array("regexp"=>"/^[-._a-zA-Z0-9]+$/")))) {
    header("HTTP/1.1 403 Forbidden: invalid filename syntax");
    exit(0);
  }

  if(file_exists($root."/secrets/".$KPSECRETS."/".$job."/"."$fname")===FALSE) {
    header("HTTP/1.1 404 $name, file $fname does not exist for job $job");
    kp_log($root, "$name, file $fname does not exist for job $job");
    exit(0);
  }

  if(unlink($root."/secrets/".$KPSECRETS."/".$job."/"."$fname")===FALSE) {
    header("HTTP/1.1 404 $name, failed to unlink file $fname for job $job");
    kp_log($root, "$name, failed to unlink file $fname for job $job");
    exit(0);
  }
  kp_log($root, "$name unlinked $fname for job $job");
  exit(0);
}

if($op) {
  header("HTTP/1.1 404 Operation not supported");
  exit(0);
}
?>
