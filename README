Administrative Control Panel
----------------------------

Authentication method: CAS.
Authorization: roles.


PHP.ini
-------

PHP used must have PCNTL support.

Below are the PHP optios I know must be set (pick your own timezone obviously):
 short_open_tag = On
 date.timezone = "Europe/Stockholm";

Apache config
-------------

<Directory "/opt/apache/htdocs/kp">
    Options ExecCGI
    AcceptPathInfo On
#   SetEnv PATH /opt/php-5.3/bin:/bin:/usr/bin
#   SetEnv KPSECRETS secretkey
    SetEnv KPHOME /var/lib/kp
    SetEnv KPSESSIONTIMEOUT 480
    SetEnv KPCOOKIETIMEOUT 480
    SetEnv KPCASURL "https://cas.url.example/cas"
    SetEnv KPCASSERVICE	"http://kp.example/kp/kp"
    <Files "kp">
    	      SetHandler cgi-script
    </Files>
    <Files ~ "^_(exe|auth|view|tags|log|logout)$">
    	      SetHandler cgi-script
    </Files>
</Directory>

$KPHOME/log and $KPHOME/tmp must be writable by kp.

Authorization
-------------

Populate $KPHOME/auth with files corresponding to roles.
Each file (rolefile) should contain a newline delimited list of usernames.
Users with their username in a rolefile will have access to all jobs with this role in its 'roles' file.

Anatomy of a job
----------------

Jobs are created in a subdirectory under $KPHOME/exe. One subdir per job.

The files in this drectory are:
name [optional]
     Name that may contain spaces etc, for display to user.

description
     Text describing the job. Usage and purpose.

roles
     Names of roles that are allowed to see and execute this job. One per line.
     Newline delimited.

run [optional]

tags
     Tags to allow finding the job via the URL.

param1 [optional]
     Description of the first parameter that the user must supply for job execution.

param2 [optional]
     Description of the second parameter that the user must supply for job execution.

param3 [optional]
     Description of the third parameter that the user must supply for job execution.

Parameter description
---------------------

<text>: text <content>
<text>: select <content> <options>

content: alpha|alnum|num|path|url
Types: text|select

alpha: [A-Za-z]+
alnum: [A-Za-z0-9]+
path: [A-Za-z0-9/_.-]+
url: [A-Za-z0-9/_+.%:-]+
num: [0-9]+

Examples.
Select a value: select alnum A B C D
Input some text: text alpha

Per job secrets
---------------

If you need to have job-specific data that must be hidden from other jobs, you can
create a directory $KPHOME/secrets/SECRETKEY.

To stop other users from figuring out the secret directory:
$ chmod o-r $KPHOME/secrets
Note that the directory $KPHOME/secrets must not be owned or writable by the user running kp.

Configure the webserver to export the secret key:
SetEnv KPSECRETS <SECRETKEY>

Also note that this will not be completely secure unless you also use the sandbox functionality.

Sandbox
-------

To isolate jobs from each other.
Only way to keep secrets from other jobs.

Needs the sandbox application: http://....

SetEnv KPSANDBOX yes

